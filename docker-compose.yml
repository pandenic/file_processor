version: "3.10"

volumes:
  postgres:
  static:

services:
  postgres:
    image: postgres:alpine
    restart: always
    env_file: .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.10.7-management
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=rmuser
      - RABBITMQ_DEFAULT_PASS=rmpassword
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 209715200
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq/mnesia
    ports:
      - 15672:15672
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 20s
      retries: 5

  django:
    restart: always
    build:
      context: ./
      dockerfile: infra/file_processing.Dockerfile
    env_file: .env
    volumes:
      - ./file_processing/uploaded_files:/app/uploaded_files
      - static:/app/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy

  worker:
    restart: always
    build:
      context: ./
      dockerfile: infra/celery_worker.Dockerfile
    volumes:
      - ./file_processing/uploaded_files:/app/uploaded_files
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy

  nginx:
    image: nginx:1.25.0
    ports:
      - "80:80"
    volumes:
      - ./infra/nginx.conf:/etc/nginx/conf.d/default.conf
      - static:/var/www/html/static/
    depends_on:
      - django